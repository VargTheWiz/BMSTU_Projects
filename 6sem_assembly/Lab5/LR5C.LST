Turbo Assembler	 Version 3.1	    06/03/21 13:51:03	    Page 1
lr5c.asm



      1				     ;Рябкин Александр ИУ5Ц-61Б	ЛР5
      2	0000			     MYCODE segment 'CODE'
      3					 assume	cs:MYCODE, ds:data
      4
      5	0000			     start:
      6	0000  B8 0000s			     mov ax, data
      7	0003  8E D8			     mov ds, ax
      8	0005  BB 0000r			     mov bx, offset HEX_STRING
      9	0008  14*(20)			     buf db 20 dup (' ')
     10	001C  E8 007E			     call clrscr;
     11	001F  B9 000A			     mov cx, 10
     12	0022				     main:
     13	0022  BA 0010r				     mov dx, offset startStr
     14	0025  E8 005B				     call putst
     15	0028  E8 0062				     call clrf
     16
     17	002B  BE 0008r				     lea si, buf
     18	002E					     vvod:
     19
     20	002E  E8 0067				     call getch
     21	0031  88 04				     mov [si], al
     22	0033  3C 24				     cmp al, '$'
     23	0035  74 03				     je	startvivod
     24	0037  46				     inc si
     25	0038  EB F4				     jmp vvod
     26	003A					     startvivod:
     27	003A  BA 0020				     mov dx, 32
     28	003D  E8 0048				     call putch
     29	0040  BA 00CD				     mov dx, 205
     30	0043  E8 0042				     call putch
     31	0046  BA 0020				     mov dx, 32
     32	0049  E8 003C				     call putch
     33	004C  51				     push cx
     34	004D  8B CE				     mov cx, si
     35	004F  BE 0008r				     lea si, buf
     36	0052  2B CE				     sub cx, si
     37	0054					     vivod:
     38	0054  8A 04				     mov al, [si]
     39	0056  46				     inc si
     40	0057  8A D0				     mov dl, al
     41	0059  E8 0048				     call hex
     42	005C  BA 0020				     mov dx, 32
     43	005F  E8 0026				     call putch
     44	0062  E2 F0				     loop vivod
     45	0064  59				     pop cx
     46	0065  E8 0025				     call clrf
     47	0068  BA 0028r				     mov dx, offset continueStr
     48	006B  E8 0015				     call putst
     49	006E  E8 0027				     call getch
     50	0071  3C 71				     cmp al, 'q'
     51	0073  74 05				     je	exit
     52	0075  E8 0015				     call clrf
     53	0078  E2 A8			     loop main
     54
     55	007A			     exit:
     56	007A  E8 0020			     call clrscr;
     57
Turbo Assembler	 Version 3.1	    06/03/21 13:51:03	    Page 2
lr5c.asm



     58	007D  B0 00			     mov al, 0
     59	007F  B4 4C			     mov ah, 4ch
     60	0081  CD 21			     int 021h
     61
     62	0083				     putst proc
     63	0083  B4 09				     mov ah, 09h
     64	0085  CD 21				     int 021h
     65	0087  C3				     ret
     66	0088				     putst endp
     67
     68	0088				     putch proc
     69	0088  B4 02				     mov ah, 02h
     70	008A  CD 21				     int 021h
     71	008C  C3				     ret
     72	008D				     putch endp
     73	008D				     clrf proc
     74	008D  B2 0A				     mov dl, 10
     75	008F  E8 FFF6				     call putch
     76	0092  B2 0D				     mov dl, 13
     77	0094  E8 FFF1				     call putch
     78	0097  C3				     ret
     79	0098				     clrf endp
     80	0098				     getch proc
     81	0098  B4 01				     mov ah, 01h
     82	009A  CD 21				     int 021h
     83	009C  C3			     ret
     84	009D				     getch endp
     85	009D				     clrscr proc
     86	009D  B4 00				     mov ah, 00h
     87	009F  B0 02				     mov al, 02
     88	00A1  CD 10				     int 10h
     89	00A3  C3				     ret
     90	00A4				     clrscr endp
     91
     92	00A4				     hex proc
     93	00A4  50			     push ax
     94	00A5  D0 E8 D0 E8 D0 E8	D0+	     shr al, 4
     95	      E8
     96	00AD  D7			     xlat
     97	00AE  8A D0			     mov dl, al
     98	00B0  E8 FFD5			     call putch
     99	00B3  58			     pop ax
    100	00B4  24 0F			     and al, 00001111b
    101	00B6  D7			     xlat
    102	00B7  8A D0			     mov dl, al
    103	00B9  E8 FFCC			     call putch
    104	00BC  BA 0068			     mov dx, 104
    105	00BF  E8 FFC6			 call putch
    106	00C2  C3			 ret
    107	00C3				     hex endp
    108
    109	00C3			     MYCODE ends
    110	0000			     data segment
    111	0000  30 31 32 33 34 35	36+  HEX_STRING	db '0123456789abcdef'
    112	      37 38 39 61 62 63	64+
    113	      65 66
    114	0010  45 6E 74 65 72 20	63+  startStr db 'Enter	converting string$'
Turbo Assembler	 Version 3.1	    06/03/21 13:51:03	    Page 3
lr5c.asm



    115	      6F 6E 76 65 72 74	69+
    116	      6E 67 20 73 74 72	69+
    117	      6E 67 24
    118	0028  46 6F 72 20 70 72	6F+  continueStr db 'For program stop enter "q": $'
    119	      67 72 61 6D 20 73	74+
    120	      6F 70 20 65 6E 74	65+
    121	      72 20 22 71 22 3A	20+
    122	      24
    123	0045			     data ends
    124				     end start
Turbo Assembler	 Version 3.1	    06/03/21 13:51:03	    Page 4
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "06/03/21"
??FILENAME		Text   "lr5c	"
??TIME			Text   "13:51:03"
??VERSION		Number 030A
@CPU			Text   0101H
@CURSEG			Text   DATA			   #2  #110
@FILENAME		Text   LR5C
@WORDSIZE		Text   2			   #2  #110
BUF			Byte   MYCODE:0008		   #9  17  35
CLRF			Near   MYCODE:008D		   15  46  52  #73
CLRSCR			Near   MYCODE:009D		   10  56  #85
CONTINUESTR		Byte   DATA:0028		   47  #118
EXIT			Near   MYCODE:007A		   51  #55
GETCH			Near   MYCODE:0098		   20  49  #80
HEX			Near   MYCODE:00A4		   41  #92
HEX_STRING		Byte   DATA:0000		   8  #111
MAIN			Near   MYCODE:0022		   #12	53
PUTCH			Near   MYCODE:0088		   28  30  32  43  #68	75  77	98  103	 105
PUTST			Near   MYCODE:0083		   14  48  #62
START			Near   MYCODE:0000		   #5  124
STARTSTR		Byte   DATA:0010		   13  #114
STARTVIVOD		Near   MYCODE:003A		   23  #26
VIVOD			Near   MYCODE:0054		   #37	44
VVOD			Near   MYCODE:002E		   #18	25

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

DATA			16  0045 Para	none		   3  6	 #110
MYCODE			16  00C3 Para	none	CODE	   #2  3
